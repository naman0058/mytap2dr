<%- include('../layout') %>

<style>
  :root{
    --brand:#0b76e0; --brand-ink:#0a5fb4; --ink:#0f172a; --muted:#64748b; --border:#e2e8f0;
    --bg:#f8fafc; --card:#ffffff; --danger:#dc2626;
    --appbar-h:64px; --header-h:60px;
  }
  *{box-sizing:border-box}
  html,body{height:100%}
  body{margin:0;background:var(--bg);color:var(--ink);font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,"Noto Sans","Helvetica Neue",Arial}

  /* Sticky Header */
  .site-header{
    position:sticky;top:0;z-index:60;height:var(--header-h);
    background:#fff;border-bottom:1px solid var(--border);
    display:flex;align-items:center;gap:10px;padding:0 14px;
  }
  .site-header .brand{display:flex;align-items:center;gap:10px}
  .brand img{height:30px;width:30px;object-fit:contain}
  .brand-name{font-weight:700;color:var(--brand-ink)}
  .brand-tag{font-size:12px;color:var(--muted);margin-left:6px}


  .meta-row{
  display:flex; gap:8px; align-items:center; margin-top:6px; flex-wrap:wrap;
}
.price-pill{
  display:inline-flex; align-items:center; gap:6px;
  padding:4px 10px; border:1px solid #e2e8f0; border-radius:999px;
  background:#fff; font-weight:700; color:#0f172a; font-size:12px;
}
.price-pill .rupee{font-weight:800;color:#0a5fb4}
.offer-badge{
  display:inline-flex; align-items:center; gap:6px;
  padding:3px 8px; border-radius:999px; font-size:11px; font-weight:600;
  background:#0a5fb4; border:1px solid #0a5fb4; color:white;
}
.offer-badge svg{width:14px;height:14px}
.subtle{color:#64748b}

  /* Page */
  .page{max-width:980px;margin:0 auto;padding:14px; padding-bottom: calc(var(--appbar-h) + 20px);} /* prevent overlap */

  /* Selection Chips (summary) */
  .selection-header{
    display:flex;flex-wrap:wrap;gap:8px;align-items:center;
    background:#eef6ff;border:1px solid #dbeafe;border-radius:12px;
    padding:10px;margin:10px 0 14px;
  }
  .selection-header h2{font-size:16px;margin:0 8px 0 0;color:var(--brand-ink)}
  .chip{
    display:inline-flex;align-items:center;gap:6px;
    background:#fff;border:1px solid #dbeafe;border-radius:999px;
    padding:6px 10px;font-size:13px;color:#0f172a;
  }
  .chip svg{width:16px;height:16px}
  .chip .edit-btn{
    margin-left:6px;border:none;background:#eef6ff;border:1px solid #dbeafe;color:#0a5fb4;
    padding:2px 8px;border-radius:999px;cursor:pointer;font-size:12px;
  }

  /* Section Card */
  .card{
    background:var(--card);border:1px solid var(--border);border-radius:16px;
    padding:14px;margin-bottom:14px; box-shadow:0 1px 1px rgba(0,0,0,.02),0 2px 10px rgba(0,0,0,.03);
  }
  .section-title{font-size:16px;font-weight:700;margin:0 0 10px}

  /* Grid + Select Cards */
  .grid{display:grid;gap:10px}
  .grid.cities{grid-template-columns:repeat(2,1fr)}
  .grid.doctors{grid-template-columns:1fr}
  @media(min-width:640px){
    .grid.cities{grid-template-columns:repeat(3,1fr)}
    .grid.doctors{grid-template-columns:repeat(2,1fr)}
  }
  @media(min-width:900px){
    .grid.cities{grid-template-columns:repeat(4,1fr)}
    .grid.doctors{grid-template-columns:repeat(3,1fr)}
  }

  .select-card{
    border:1px solid var(--border);border-radius:12px;background:#fff;
    padding:12px;cursor:pointer; text-align:left; display:flex;gap:10px;align-items:flex-start;
    transition:transform .08s ease, box-shadow .08s ease, border-color .08s ease;
  }
  .select-card:hover, .select-card:focus{outline:none;transform:translateY(-1px);box-shadow:0 2px 10px rgba(0,0,0,.05)}
  .select-card[aria-pressed="true"]{border-color:#93c5fd; background:#f0f7ff}
  .select-card .title{font-weight:600;color:black}
  .select-card .sub{font-size:12px;color:var(--muted)}
  .select-card .avatar{
    width:36px;height:36px;border-radius:8px;background:#e2e8f0;display:inline-flex;align-items:center;justify-content:center
  }

  /* Date & Time */
  .grid-2{display:grid;grid-template-columns:1fr;gap:12px}
  @media(min-width:640px){ .grid-2{grid-template-columns:1fr 1fr} }
  input[type="date"]{
    width:100%;padding:10px 12px;border-radius:10px;border:1px solid var(--border);background:#fff;font-size:15px;color:black
  }
  input[disabled]{background:#f1f5f9;color:#94a3b8}
  #slots{display:flex;flex-wrap:wrap;gap:8px}
  .slot-btn{
    border:1px solid var(--border);background:#fff;border-radius:10px;padding:8px 12px;cursor:pointer;font-size:14px
  }
  .slot-btn[disabled]{background:#e0f2fe;border-color:#bae6fd;cursor:default}

  /* Form */
  .field{margin-bottom:12px}
  .field label span{display:block;font-size:13px;color:var(--muted);margin-bottom:6px}
  .input{
    width:100%;padding:10px 12px;border-radius:10px;border:1px solid var(--border);background:#fff;font-size:15px
  }
  .btn-primary{
    background:var(--brand);color:#fff;border:none;border-radius:10px;padding:12px 16px;font-size:15px;cursor:pointer
  }
  .btn-primary:disabled{background:#93c5fd;cursor:not-allowed}
  .error{margin:0 0 10px;padding:10px 12px;background:#fff1f2;border:1px solid #fecdd3;border-radius:12px;color:var(--danger)}
  .error li{margin-left:18px}

  /* Steps */
  .step{display:none}
  .step.active{display:block}

  /* Bottom App Bar (keep fixed; padding-bottom avoids overlap) */
  .appbar{
    position:fixed;left:0;right:0;bottom:0;height:var(--appbar-h);background:#fff;border-top:1px solid var(--border);
    display:grid;grid-template-columns:repeat(3,1fr);padding:6px 10px;z-index:55;
  }
  .appbar a{
    text-decoration:none;color:var(--muted);font-size:12px;display:flex;flex-direction:column;align-items:center;gap:4px;
    padding:6px 8px;border-radius:10px
  }
  .appbar a.active{color:var(--brand-ink);background:#eef6ff}
  .appbar svg{width:22px;height:22px}


    input[type="date"]:not(:focus):not([value]):before {
    content: attr(data-placeholder);
    color: #888;
    margin-right: .5rem;
  }
</style>

<!-- Header -->
<header class="site-header" role="banner">
  <div class="brand">
    <img src="/static/logo.svg" alt="Tap2Doctor logo" onerror="this.style.display='none'">
    <div>
      <div class="brand-name">Tap2Doctor</div>
      <div class="brand-tag">Healthcare ‚Ä¢ ‡§π‡•á‡§≤‡•ç‡§•‡§ï‡•á‡§Ø‡§∞</div>
    </div>
  </div>
</header>

<div class="page">
  <!-- Selection chips -->
  <div class="selection-header" aria-live="polite">
    <h2>‡§Ö‡§™‡•â‡§á‡§Ç‡§ü‡§Æ‡•á‡§Ç‡§ü / Appointment</h2>

    <!-- Hospital chip -->
    <div class="chip" id="chip-hospital" title="Hospital / ‡§π‡•â‡§∏‡•ç‡§™‡§ø‡§ü‡§≤">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <rect x="3" y="3" width="18" height="18" rx="2" stroke-width="1.5"/>
        <path stroke-width="1.5" d="M8 12h8M12 8v8"/>
      </svg>
      <span><strong>Hospital:</strong> <span data-text><%= lockDoctor && lockedDoctor ? (lockedDoctor.hospital_name || '‚Äî') : '‚Äî' %></span></span>
      <% if (!(chosenHospital && chosenHospital)) { %>
        <button type="button" class="edit-btn" id="edit-hospital">Change / ‡§¨‡§¶‡§≤‡§æ‡§µ</button>
      <% } %>
    </div>

    <!-- Doctor chip -->
    <div class="chip" id="chip-doctor" title="Doctor / ‡§°‡•â‡§ï‡•ç‡§ü‡§∞">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <circle cx="12" cy="8" r="4" stroke-width="1.5"/><path stroke-width="1.5" d="M4 20a8 8 0 0 1 16 0"/>
      </svg>
      <span><strong>Doctor:</strong> <span data-text><%= lockDoctor && lockedDoctor ? (lockedDoctor.doctor_name + (lockedDoctor.hospital_name ? ' ‚Äî ' + lockedDoctor.hospital_name : '') + (lockedDoctor.specialist ? ' ('+lockedDoctor.specialist+')' : '')) : '‚Äî' %></span></span>
      <% if (!(lockDoctor && lockedDoctor)) { %>
        <button type="button" class="edit-btn" id="edit-doctor">Change / ‡§¨‡§¶‡§≤‡§æ‡§µ</button>
      <% } %>
    </div>

    <div class="chip" id="chip-date" title="Date / ‡§§‡§æ‡§∞‡•Ä‡§ñ">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor"><rect x="3" y="4" width="18" height="18" rx="2" stroke-width="1.5"/><path stroke-width="1.5" d="M8 2v4M16 2v4M3 10h18"/></svg>
      <span><strong>Date:</strong> <span data-text>‚Äî</span></span>
    </div>

    <div class="chip" id="chip-time" title="Time / ‡§∏‡§Æ‡§Ø">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor"><circle cx="12" cy="12" r="9" stroke-width="1.5"/><path stroke-width="1.5" d="M12 7v5l3 2"/></svg>
      <span><strong>Time:</strong> <span data-text>‚Äî</span></span>
    </div>
  </div>

  <!-- Errors -->
  <% if (errors && errors.length) { %>
    <ul class="error">
      <% errors.forEach(function(e){ %><li><%= e.msg %></li><% }) %>
    </ul>
  <% } %>

  <!-- STEP 1: Hospital -->
  <section class="card step active" id="step-hospital" aria-labelledby="hospital-label">
    <p class="section-title" id="hospital-label">Hospital / ‡§π‡•â‡§∏‡•ç‡§™‡§ø‡§ü‡§≤ ‡§ö‡•Å‡§®‡•á‡§Ç</p>

    <% if (lockDoctor && lockedDoctor) { %>
      <div class="select-card" aria-pressed="true" tabindex="0">
        <div class="avatar">üè•</div>
        <div>
          <div class="title"><%= lockedDoctor.hospital_name || '-' %></div>
          <div class="sub">Selected / ‡§ö‡•Å‡§®‡§æ ‡§ó‡§Ø‡§æ</div>
        </div>
      </div>
      <input type="hidden" id="hospital" value="<%= lockedDoctor.hospital_name || '' %>">
    <% } else { %>
      <div class="field">
        <input id="hospital-search" class="input" type="text" placeholder="Search hospital / ‡§π‡•â‡§∏‡•ç‡§™‡§ø‡§ü‡§≤ ‡§ñ‡•ã‡§ú‡•á‡§Ç">
      </div>
      <div class="grid cities" id="hospitals-grid">
        <% (hospitals || []).forEach(function(h){ %>
          <button class="select-card hospital-item" type="button" data-hospital="<%= h.hospital %>" aria-pressed="false">
            <div class="avatar">üè•</div>
            <div>
              <div class="title"><%= h.hospital %></div>
              <div class="sub">Tap to select / ‡§ö‡•Å‡§®‡•á‡§Ç</div>
            </div>
          </button>
        <% }) %>
      </div>
      <input type="hidden" id="hospital" value="<%= chosenHospital || '' %>">
    <% } %>
  </section>

  <!-- STEP 2: Doctor -->
  <section class="card step <%= lockDoctor ? 'active' : '' %>" id="step-doctor" aria-labelledby="doctor-label">
    <p class="section-title" id="doctor-label">Doctor / ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç</p>
    <% if (lockDoctor && lockedDoctor) { %>
      <div class="select-card" aria-pressed="true" tabindex="0">
        <div class="avatar">ü©∫</div>
        <div>
          <div class="title"><%= lockedDoctor.doctor_name %></div>
          <div class="sub"><%= lockedDoctor.hospital_name || '' %> <%= lockedDoctor.specialist ? '('+lockedDoctor.specialist+')' : '' %></div>
        </div>
      </div>
      <select id="doctor" style="display:none">
        <option value="<%= lockedDoctor.doctor_id %>" selected><%= lockedDoctor.doctor_name %></option>
      </select>
    <% } else { %>
      <div class="field">
        <input id="doctor-search" class="input" type="text" placeholder="Search doctor / ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§ñ‡•ã‡§ú‡•á‡§Ç" disabled>
      </div>
      <div class="grid doctors" id="doctors-grid" data-empty="Select hospital first / ‡§™‡§π‡§≤‡•á ‡§π‡•â‡§∏‡•ç‡§™‡§ø‡§ü‡§≤ ‡§ö‡•Å‡§®‡•á‡§Ç"></div>
      <select id="doctor" style="display:none"></select>
    <% } %>
  </section>

  <!-- STEP 3: Date & Time -->
  <section class="card step <%= lockDoctor ? 'active' : '' %>" id="step-datetime" aria-labelledby="dt-label">
    <p class="section-title" id="dt-label">Date & Time / ‡§§‡§æ‡§∞‡•Ä‡§ñ ‡§µ ‡§∏‡§Æ‡§Ø</p>
    <div class="grid-2">
      <div class="field">
        <label><span>Date / ‡§§‡§æ‡§∞‡•Ä‡§ñ</span>
          <input type="date" id="date" data-placeholder="Select Date" min="<%= new Date().toISOString().slice(0,10) %>" <%= (lockDoctor ? '' : 'disabled') %> />
        </label>
      </div>
      <div class="field">
        <span style="display:block;font-size:13px;color:var(--muted);margin-bottom:6px;">Time / ‡§∏‡§Æ‡§Ø</span>
        <div id="slots" aria-live="polite"></div>
      </div>
    </div>
  </section>

  <!-- STEP 4: Patient Details -->
  <section class="card step" id="step-form" aria-labelledby="form-label">
    <p class="section-title" id="form-label">Your Details / ‡§Ü‡§™‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä</p>
    <form id="bookForm" method="post" action="/booking/hospital">
      <input type="hidden" name="prefill_locked" value="<%= lockDoctor ? '1' : '0' %>">
      <!-- We still send city to backend; set from selected doctor -->
    <input type="hidden" name="hospital" id="f_hospital" value="<%= lockDoctor && lockedDoctor ? (lockedDoctor.hospital_name || '') : (chosenHospital || '') %>">
      <input type="hidden" name="doctor_id" id="f_doctor" value="<%= lockDoctor && lockedDoctor ? lockedDoctor.doctor_id : '' %>">
      <input type="hidden" name="appointment_date" id="f_date">
      <input type="hidden" name="appointment_time" id="f_time">

      <div class="grid-2">
        <label class="field"><span>Full Name / ‡§™‡•Ç‡§∞‡§æ ‡§®‡§æ‡§Æ</span>
          <input name="patient_name" class="input" type="text" required autocomplete="name">
        </label>
        <label class="field"><span>Mobile Number / ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞</span>
          <input name="patient_phone" class="input" type="tel" pattern="[0-9]{10}" maxlength="10" required autocomplete="tel">
        </label>
      </div>
      <button type="submit" class="btn-primary">Book Appointment / ‡§Ö‡§™‡•â‡§á‡§Ç‡§ü‡§Æ‡•á‡§Ç‡§ü ‡§¨‡•Å‡§ï ‡§ï‡§∞‡•á‡§Ç</button>
    </form>
  </section>
</div>

<script>
// ===== Server flags =====
const lockDoctor = <%= lockDoctor ? 'true' : 'false' %>;
const lockedDoctor = <%- JSON.stringify(lockedDoctor || null) %>;

// ===== DOM =====
const stepHospital = document.getElementById('step-hospital');
const stepDoctor   = document.getElementById('step-doctor');
const stepDT       = document.getElementById('step-datetime');
const stepForm     = document.getElementById('step-form');

const hospitalsGrid = document.getElementById('hospitals-grid');
const hospitalSearch = document.getElementById('hospital-search');
const doctorsGrid   = document.getElementById('doctors-grid');
const doctorHidden  = document.getElementById('doctor');

const hospitalInp = document.getElementById('hospital');
const dateInp     = document.getElementById('date');
const slotsDiv    = document.getElementById('slots');

const form   = document.getElementById('bookForm');
const f_hospital = document.getElementById('f_hospital');
const f_doc  = document.getElementById('f_doctor');
const f_date = document.getElementById('f_date');
const f_time = document.getElementById('f_time');

// Chips
const chipHospital = document.querySelector('#chip-hospital [data-text]');
const chipDoc      = document.querySelector('#chip-doctor [data-text]');
const chipDate     = document.querySelector('#chip-date [data-text]');
const chipTime     = document.querySelector('#chip-time [data-text]');
const editHospitalBtn = document.getElementById('edit-hospital');
const editDoctorBtn   = document.getElementById('edit-doctor');

// Utils
const show = el => el.classList.add('active');
const hide = el => el.classList.remove('active');
const clear = el => { while (el.firstChild) el.removeChild(el.firstChild); };

function updateChips(){
  chipHospital.textContent = hospitalInp?.value || (lockedDoctor?.hospital_name || '‚Äî');
  chipDoc.textContent = f_doc.dataset?.label || (lockDoctor && lockedDoctor
    ? (lockedDoctor.doctor_name + (lockedDoctor.hospital_name ? ' ‚Äî ' + lockedDoctor.hospital_name : '') + (lockedDoctor.specialist ? ' ('+lockedDoctor.specialist+')' : ''))
    : '‚Äî');
  chipDate.textContent = f_date.value || dateInp.value || '‚Äî';
  chipTime.textContent = f_time.value || '‚Äî';
}
function markPressed(group, target){
  group.querySelectorAll('.select-card').forEach(b => b.setAttribute('aria-pressed','false'));
  target.setAttribute('aria-pressed','true');
}
function collapseHospitalStep(){ hide(stepHospital); show(stepDoctor); }
function collapseDoctorStep(){ hide(stepDoctor); }

function reopenHospital(){
  show(stepHospital); hide(stepDoctor); hide(stepDT); hide(stepForm);
  dateInp.value = ''; f_date.value = ''; f_time.value = ''; clear(slotsDiv);
  f_doc.value = ''; f_doc.dataset.label = '';
  updateChips(); stepHospital.scrollIntoView({behavior:'smooth', block:'start'});
}
function reopenDoctor(){
  if (!hospitalInp.value && !(lockDoctor && lockedDoctor)) { show(stepHospital); hide(stepDoctor); }
  else { hide(stepHospital); show(stepDoctor); }
  hide(stepDT); hide(stepForm);
  dateInp.value=''; f_date.value=''; f_time.value=''; clear(slotsDiv);
  if (!lockDoctor){ f_doc.value=''; f_doc.dataset.label=''; doctorsGrid?.querySelectorAll('.doctor-item').forEach(b=>b.setAttribute('aria-pressed','false')); }
  updateChips(); stepDoctor.scrollIntoView({behavior:'smooth', block:'start'});
}

// INIT locked mode
if (lockDoctor && lockedDoctor){
  f_doc.value = String(lockedDoctor.doctor_id);
  f_doc.dataset.label = lockedDoctor.doctor_name + (lockedDoctor.hospital_name ? ' ‚Äî ' + lockedDoctor.hospital_name : '') + (lockedDoctor.specialist ? ' ('+lockedDoctor.specialist+')' : '');
  document.getElementById('f_hospital').value = btn.dataset.hospital;
  hide(stepHospital); hide(stepDoctor); show(stepDT);
}
updateChips();

// HOSPITAL step
if (!lockDoctor && hospitalsGrid){
  if (hospitalInp.value){
    const match = [...hospitalsGrid.querySelectorAll('.hospital-item')].find(b => b.dataset.hospital === hospitalInp.value);
    if (match){ markPressed(hospitalsGrid, match); }
    collapseHospitalStep();
    loadDoctorsForHospital(hospitalInp.value);
  }

  hospitalsGrid.addEventListener('click', async (e) => {
    const btn = e.target.closest('.hospital-item'); if (!btn) return;
    hospitalInp.value = btn.dataset.hospital;
    markPressed(hospitalsGrid, btn);
    collapseHospitalStep();
    clear(doctorsGrid);
    doctorsGrid.setAttribute('data-empty','Loading doctors‚Ä¶ / ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‚Ä¶');
    await loadDoctorsForHospital(hospitalInp.value);
    updateChips();
    stepDoctor.scrollIntoView({behavior:'smooth', block:'start'});
  });

  hospitalsGrid.addEventListener('keydown', (e) => {
    if (e.key==='Enter' || e.key===' ') {
      const btn = e.target.closest('.hospital-item');
      if (btn){ btn.click(); e.preventDefault(); }
    }
  });

  hospitalSearch?.addEventListener('input', () => {
    const q = hospitalSearch.value.toLowerCase();
    hospitalsGrid.querySelectorAll('.hospital-item').forEach(b => {
      const showIt = b.dataset.hospital.toLowerCase().includes(q);
      b.style.display = showIt ? '' : 'none';
    });
  });
}

async function loadDoctorsForHospital(hospital){
  try{
    const res = await fetch(`/booking/api/doctors?hospital=${encodeURIComponent(hospital)}`);
    const docs = await res.json();
    clear(doctorsGrid);
    if (!Array.isArray(docs) || !docs.length){
      doctorsGrid.setAttribute('data-empty','No doctors found / ‡§ï‡•ã‡§à ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ');
      hide(stepDT); hide(stepForm); dateInp.disabled = true; f_doc.value=''; f_doc.dataset.label=''; updateChips(); return;
    }
    doctorHidden.innerHTML = '<option value=""></option>';

    docs.forEach(d => {
      const label = `${d.doctor_name} ‚Äî ${d.hospital_name || ''} ${d.specialist ? '('+d.specialist+')' : ''}`;
      
     const feeTxt = (d.doctor_fees != null && d.doctor_fees !== '')
  ? new Intl.NumberFormat('en-IN', { maximumFractionDigits: 0 }).format(Number(d.doctor_fees))
  : null;

const offerHtml = d.offer_text
  ? `<span class="offer-badge" title="Special offer">
       <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
         <path stroke-width="1.5" d="M3 12l5 5L21 4"/>
       </svg>${d.offer_text}
     </span>`
  : '';

     
      const btn = document.createElement('button');
      btn.type='button'; btn.className='select-card doctor-item'; btn.setAttribute('aria-pressed','false');
      btn.innerHTML = `
  <div class="avatar">ü©∫</div>
  <div>
    <div class="title">${d.doctor_name}</div>
    <div class="sub subtle">${d.hospital_name || ''} ${d.specialist ? '('+d.specialist+')' : ''}</div>

    <div class="meta-row">
      ${feeTxt ? `<span class="offer-badge" aria-label="Consultation fee">
                    <span class="rupee">Doctor Fees ‚Çπ</span><span>${feeTxt}</span>
                  </span>` : ''}
      ${offerHtml}
    </div>
  </div>
`;
      btn.dataset.id = d.doctor_id;
      btn.dataset.city = d.city || '';
      btn.dataset.label = label.trim();
      doctorsGrid.appendChild(btn);

      const opt = document.createElement('option');
      opt.value = d.doctor_id; opt.textContent = label.trim();
      doctorHidden.appendChild(opt);
    });

    const docSearch = document.getElementById('doctor-search');
    docSearch.disabled = false;
  }catch(err){
    console.error(err);
    clear(doctorsGrid);
    doctorsGrid.setAttribute('data-empty','Unable to load doctors / ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§™‡§æ‡§è');
    alert('Unable to load doctors. ‡§ï‡•É‡§™‡§Ø‡§æ ‡§¶‡•ã‡§¨‡§æ‡§∞‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§');
  }
}

// DOCTOR select
if (!lockDoctor){
  doctorsGrid?.addEventListener('click', (e) => {
    const btn = e.target.closest('.doctor-item'); if (!btn) return;
    markPressed(doctorsGrid, btn);
    f_doc.value = String(btn.dataset.id);
    f_doc.dataset.label = btn.dataset.label || '';
    // IMPORTANT: set city from selected doctor for backend validation
    if (!f_hospital.value) {
  f_hospital.value = hospitalInp.value || (lockedDoctor?.hospital_name || '');
}
    doctorHidden.value = f_doc.value;

    dateInp.disabled = false;
    show(stepDT);
    clear(slotsDiv); hide(stepForm); f_time.value=''; f_date.value='';
    updateChips();
    collapseDoctorStep();
    stepDT.scrollIntoView({behavior:'smooth', block:'start'});
  });

  document.getElementById('doctor-search')?.addEventListener('input', (e) => {
    const q = e.target.value.toLowerCase();
    doctorsGrid.querySelectorAll('.doctor-item').forEach(b => {
      const text = (b.dataset.label || '').toLowerCase();
      b.style.display = text.includes(q) ? '' : 'none';
    });
  });
}

// DATE -> SLOTS
dateInp.addEventListener('change', async () => {
  clear(slotsDiv); hide(stepForm); f_time.value='';
  const doctorId = lockDoctor ? lockedDoctor?.doctor_id : f_doc.value;
  if (!doctorId || !dateInp.value){ updateChips(); return; }
  f_date.value = dateInp.value;
  try{
    const url = `/booking/api/slots?doctor_id=${doctorId}&date=${dateInp.value}`;
    const res = await fetch(url);
    const slots = await res.json();
    if (Array.isArray(slots) && slots.length){
      slots.forEach(t => {
        const b = document.createElement('button');
        b.type='button'; b.className='slot-btn'; b.textContent = t;
        b.addEventListener('click', () => {
          [...slotsDiv.querySelectorAll('button')].forEach(x => x.disabled=false);
          b.disabled = true;
          f_time.value = t;
          updateChips();
          show(stepForm);
          stepForm.scrollIntoView({behavior:'smooth', block:'start'});
        });
        slotsDiv.appendChild(b);
      });
    }else{
      const p=document.createElement('p'); p.textContent='No slots available for this date. / ‡§á‡§∏ ‡§§‡§æ‡§∞‡•Ä‡§ñ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•ç‡§≤‡•â‡§ü ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡§Ç.';
      slotsDiv.appendChild(p);
    }
  }catch(err){
    console.error(err);
    const p=document.createElement('p'); p.textContent='Could not load time slots. / ‡§∏‡•ç‡§≤‡•â‡§ü ‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§™‡§æ‡§è‡•§';
    slotsDiv.appendChild(p);
  }
});

// Submit guard
form.addEventListener('submit', (e) => {
  if (!f_hospital.value || !f_doc.value || !f_date.value || !f_time.value){
    e.preventDefault();
    alert('Please complete all steps (Hospital, Doctor, Date, Time). / ‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§≠‡•Ä ‡§∏‡•ç‡§ü‡•á‡§™‡•ç‡§∏ ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç (‡§π‡•â‡§∏‡•ç‡§™‡§ø‡§ü‡§≤, ‡§°‡•â‡§ï‡•ç‡§ü‡§∞, ‡§§‡§æ‡§∞‡•Ä‡§ñ, ‡§∏‡§Æ‡§Ø)‡•§');
  }
});

// Edit buttons
document.getElementById('edit-hospital')?.addEventListener('click', reopenHospital);
document.getElementById('edit-doctor')?.addEventListener('click', reopenDoctor);

// Prefill city if locked
if (lockDoctor && lockedDoctor){ f_hospital.value = lockedDoctor.hospital_name || ''; }
updateChips();
</script>
