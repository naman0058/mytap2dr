<%- include('../layout.ejs') %>

<style>
  :root{
    --brand:#0b76e0; --brand-ink:#0a5fb4; --ink:#0f172a; --muted:#64748b; --border:#e2e8f0;
    --bg:#f8fafc; --card:#ffffff; --success:#16a34a; --warn:#f59e0b; --danger:#dc2626; --info:#2563eb;
  }
  *{box-sizing:border-box}
  body{margin:0;background:var(--bg);color:var(--ink);font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,"Noto Sans","Helvetica Neue",Arial}
  .page{max-width:960px;margin:0 auto;padding:16px}

  /* Header / doctor summary */
  .summary{
    display:flex;gap:10px;flex-wrap:wrap;align-items:center;
    background:#eef6ff;border:1px solid #dbeafe;border-radius:16px;padding:12px;margin:6px 0 14px;
  }
  .summary h1{font-size:18px;margin:0;color:var(--brand-ink)}
  .pill{display:inline-flex;align-items:center;gap:8px;background:#fff;border:1px solid #dbeafe;border-radius:999px;padding:6px 10px;font-size:13px}
  .pill svg{width:16px;height:16px}

  /* Stat cards */
  .grid{display:grid;gap:10px}
  .stats{grid-template-columns:repeat(2,1fr)}
  @media(min-width:640px){ .stats{grid-template-columns:repeat(4,1fr)} }
  .card{
    background:var(--card);border:1px solid var(--border);border-radius:16px;padding:14px;
    box-shadow:0 1px 1px rgba(0,0,0,.02), 0 2px 10px rgba(0,0,0,.03);
  }
  .stat-title{font-size:12px;color:var(--muted);margin:0 0 6px}
  .stat-value{font-size:26px;font-weight:800;margin:0}
  .hint{font-size:12px;color:var(--muted);margin-top:4px}

  /* Progress */
  .progress{height:10px;background:#eef2f7;border-radius:999px;overflow:hidden}
  .progress > div{height:100%;background:linear-gradient(90deg,#93c5fd,#60a5fa);width:0%}

  /* Seat map */
  .seats-wrap{margin-top:8px}
  .seats{
    display:grid;grid-template-columns:repeat(4,1fr);gap:10px;
  }
  @media(min-width:640px){ .seats{grid-template-columns:repeat(8,1fr)} }
  .seat{
    position:relative;display:flex;flex-direction:column;align-items:center;gap:4px;
  }
  .bubble{
    width:48px;height:48px;border-radius:50%;display:flex;align-items:center;justify-content:center;
    background:#f1f5f9;border:2px solid #e2e8f0;font-weight:700
  }
  .seat .no{font-size:12px;color:var(--muted)}
  .seat.now   .bubble{background:#ecfdf5;border-color:#bbf7d0;color:#065f46}    /* Now */
  .seat.next  .bubble{background:#fff7ed;border-color:#fed7aa;color:#7c2d12}   /* Next */
  .seat.you   .bubble{background:#eff6ff;border-color:#bfdbfe;color:#1e3a8a}   /* You */
  .seat.wait  .bubble{background:#ffffff;border-color:#e2e8f0;color:#0f172a}   /* Waiting */
  .seat.empty .bubble{background:#f8fafc;border-color:#f1f5f9;color:#cbd5e1}   /* Empty */

  .legend{display:flex;flex-wrap:wrap;gap:8px;margin-top:10px}
  .legend .tag{display:inline-flex;align-items:center;gap:4px;border:1px solid var(--border);border-radius:999px;padding:6px 10px;background:#fff;font-size:12px}
  .dot{width:12px;height:12px;border-radius:50%}
  .dot.now{background:#22c55e}
  .dot.next{background:#f59e0b}
  .dot.you{background:#3b82f6}
  .dot.wait{background:#94a3b8}
  .dot.empty{background:#e5e7eb}

  /* Footer help */
  .help{font-size:13px;color:var(--muted);margin-top:8px}
  .danger{color:var(--danger)}
</style>

<div class="page">

  <!-- Doctor + date summary -->
  <div class="summary">
    <h1>Live Queue / लाइव क्यू</h1>
    <span class="pill" title="Doctor / डॉक्टर">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor"><circle cx="12" cy="8" r="4" stroke-width="1.5"/><path stroke-width="1.5" d="M4 20a8 8 0 0 1 16 0"/></svg>
      <strong><%= data.doctor?.doctor_name %></strong> — <%= data.doctor?.hospital_name %>, <%= data.doctor?.city %>
    </span>
    <span class="pill" title="Date / तारीख">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor"><rect x="3" y="4" width="18" height="18" rx="2" stroke-width="1.5"/><path stroke-width="1.5" d="M8 2v4M16 2v4M3 10h18"/></svg>
      <%= data.date %>
    </span>
    <span class="pill" title="Auto refresh">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor"><path stroke-width="1.5" d="M3 12a9 9 0 1 0 3-6.7M3 4v4h4"/></svg>
      <span id="refreshText">Refreshing in 15s / 15 सेकंड में ताज़ा</span>
    </span>
  </div>

  <!-- Top stats -->
  <div class="grid stats">
    <div class="card">
      <p class="stat-title">Now Serving / चल रहा है</p>
      <p class="stat-value" id="cur"><%= data.current_running_no %></p>
      <div class="hint">Please stay nearby. / पास ही रहें।</div>
    </div>
    <div class="card">
      <p class="stat-title">Next / अगला</p>
      <p class="stat-value" id="next"><%= data.next_no %></p>
      <div class="hint">Be ready. / तैयार रहें।</div>
    </div>
    <div class="card">
      <p class="stat-title">Total Waiting / कुल प्रतीक्षा</p>
      <p class="stat-value" id="total"><%= data.total_waiting %></p>
      <div class="hint">Approx queue length. / अनुमानित लाइन।</div>
    </div>
    <% if (phone) { %>
    <div class="card">
      <p class="stat-title">Your No. / आपका नंबर</p>
      <p class="stat-value" id="yours"><%= data.your_no ?? '-' %></p>
      <div class="hint">People ahead: <span id="ahead"><%= data.people_ahead ?? '-' %></span></div>
    </div>
    <% } %>
  </div>

  <!-- Progress towards your turn (if we know people_ahead) -->
  <% if (phone) { %>
  <div class="card" style="margin-top: 10px;">
    <p class="stat-title">ETA / अनुमानित समय</p>
    <p class="stat-value" style="font-size:20px">
      <span id="eta"><%= data.eta_time ?? '-' %></span>
      <span class="hint">(~<span id="etaMin"><%= data.eta_minutes ?? '-' %></span> min / मिनट)</span>
    </p>
    <div class="progress" aria-hidden="true">
      <div id="bar" style="width:0%"></div>
    </div>
    <div class="help">Live estimate. वास्तविक स्थिति अलग हो सकती है।</div>
  </div>
  <% } %>

  <!-- Seat Map (fun + clear) -->
  <div class="card seats-wrap">
    <p class="stat-title" style="margin-bottom:8px">Queue View / कतार दृश्य</p>
    <div id="seats" class="seats" aria-live="polite" aria-label="Queue seats"></div>
    <div class="legend">
      <span class="tag"><span class="dot now"></span> Now / अभी</span>
      <span class="tag"><span class="dot next"></span> Next / अगला</span>
      <span class="tag"><span class="dot you"></span> You / आप</span>
      <span class="tag"><span class="dot wait"></span> Waiting / प्रतीक्षा</span>
      <span class="tag"><span class="dot empty"></span> Empty / खाली</span>
    </div>
    <div class="help">Numbers shown are for easy understanding. वास्तविक नंबर बदल सकते हैं।</div>
  </div>

  <div class="help">If your number is called and you are not present, it may be skipped. / यदि आपका नंबर बुलाया गया और आप उपस्थित नहीं हैं, तो नंबर आगे बढ़ सकता है।</div>
</div>

<script>
  // ------- Data & DOM refs -------
  const doctorId = `<%= String(doctor_id || '') %>`;
  const phone    = `<%= String(phone || '') %>`;
  const API_URL  = `/queue/api?doctor_id=${encodeURIComponent(doctorId)}${phone ? '&phone=' + encodeURIComponent(phone) : ''}`;

  const elCur   = document.getElementById('cur');
  const elNext  = document.getElementById('next');
  const elTotal = document.getElementById('total');
  const elYours = document.getElementById('yours');
  const elAhead = document.getElementById('ahead');
  const elEta   = document.getElementById('eta');
  const elEtaMin= document.getElementById('etaMin');
  const elBar   = document.getElementById('bar');
  const elSeats = document.getElementById('seats');
  const elRefreshTxt = document.getElementById('refreshText');

  // ------- Seat map builder -------
  /**
   * We visualize a window of seats relative to "Now" (current running).
   * - First seat = Now
   * - Second = Next
   * - Then waiting seats (3..N)
   * - Highlight "You" if your_no is inside the window
   * - Show empty seats if beyond total_waiting
   */
  function buildSeats(cur, next, totalWaiting, yourNo) {
    elSeats.innerHTML = '';

    // Define a window size that looks nice on phones
    const WINDOW = window.innerWidth < 640 ? 12 : 16;

    // current "ticket" numbers might not start from 1; we treat seat labels as numbers themselves
    // Build a sequence starting from cur up to WINDOW-1 future numbers
    const seats = [];
    for (let i = 0; i < WINDOW; i++) {
      seats.push(cur + i); // ticket # sequence
    }

    // Compute last active number in queue (approx)
    const lastActive = cur + (typeof totalWaiting === 'number' ? totalWaiting : 0);

    seats.forEach((n, idx) => {
      const seat = document.createElement('div');
      seat.className = 'seat wait'; // default

      if (n === cur)       seat.className = 'seat now';
      else if (n === next) seat.className = 'seat next';

      // mark you
      if (yourNo && Number(yourNo) === n) seat.className = 'seat you';

      // past next + beyond lastActive -> empty
      if (n > lastActive && ! (yourNo && Number(yourNo) === n)) seat.className = 'seat empty';

      // Seat DOM
      seat.innerHTML = `
        <div class="bubble">${n}</div>
        <div class="no">${ seat.classList.contains('now') ? 'Now'
                          : seat.classList.contains('next') ? 'Next'
                          : seat.classList.contains('you') ? 'You'
                          : seat.classList.contains('empty') ? 'Empty'
                          : 'Wait' }</div>
      `;
      elSeats.appendChild(seat);
    });
  }

  // ------- Progress towards your turn -------
  function updateProgress(ahead){
    if (!elBar) return;
    if (ahead == null || isNaN(ahead)) { elBar.style.width = '0%'; return; }
    // Simple mapping: 0 ahead => 100%, 10+ ahead => ~0%
    const cap = 10;
    const pct = Math.max(0, Math.min(100, 100 - (ahead / cap) * 100));
    elBar.style.width = pct + '%';
  }

  // ------- Refresh logic + countdown -------
  let refreshIntervalMs = 15000;
  let countdown = Math.floor(refreshIntervalMs/1000);
  function tickCountdown(){
    countdown--;
    if (countdown < 0) countdown = Math.floor(refreshIntervalMs/1000);
    if (elRefreshTxt) elRefreshTxt.textContent = `Refreshing in ${countdown}s / ${countdown} सेकंड में ताज़ा`;
  }
  setInterval(tickCountdown, 1000);

  async function refresh(){
    try{
      const res = await fetch(API_URL, { cache: 'no-store' });
      const j   = await res.json();

      // Update stats
      elCur.textContent   = j.current_running_no;
      elNext.textContent  = j.next_no;
      elTotal.textContent = j.total_waiting;

      if (elYours)  elYours.textContent = (j.your_no ?? '-');
      if (elAhead)  elAhead.textContent = (j.people_ahead ?? '-');
      if (elEta)    elEta.textContent   = (j.eta_time ?? '-');
      if (elEtaMin) elEtaMin.textContent= (j.eta_minutes ?? '-');

      // Seats
      buildSeats(Number(j.current_running_no), Number(j.next_no), Number(j.total_waiting), j.your_no ? Number(j.your_no) : null);

      // Progress
      if (j.people_ahead != null) updateProgress(Number(j.people_ahead));

      // Reset countdown
      countdown = Math.floor(refreshIntervalMs/1000);
    }catch(e){
      console.error(e);
      if (elRefreshTxt) elRefreshTxt.innerHTML = `<span class="danger">Network issue. Retrying… / नेटवर्क समस्या, पुनः प्रयास…</span>`;
    }
  }

  // Initial build from SSR data
  (function initFromSSR(){
    const cur   = Number(<%= Number(data.current_running_no || 0) %>);
    const next  = Number(<%= Number(data.next_no || 0) %>);
    const total = Number(<%= Number(data.total_waiting || 0) %>);
    const yours = <%= data.your_no != null ? Number(data.your_no) : 'null' %>;
    buildSeats(cur, next, total, yours);
    if (typeof <%= JSON.stringify(data.people_ahead ?? null) %> === 'number') {
      updateProgress(Number(<%= Number(data.people_ahead || 0) %>));
    }
  })();

  // Auto refresh every 15s
  refresh();
  setInterval(refresh, refreshIntervalMs);
</script>

<%- include('../partials/footer') %>
